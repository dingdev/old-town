package ${package.Controller};

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import  $!{cfg.pkg}.common.api.CommonResult;
import java.util.List;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 控制器
 * </p>
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${swagger2})
@Api(value = "${table.controllerName}", tags = "$!{table.comment}相关")
#end
@Validated
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    #set ($svr = $table.serviceName.substring(0,1).toLowerCase() + $table.serviceName.substring(1,$table.serviceName.length()))
    #set ($ent = $entity.substring(0,1).toLowerCase() + $entity.substring(1,$entity.length()))

    @Autowired
    ${table.serviceName}  ${svr};

    @ApiOperation("分页查询$!{table.comment}")
    @GetMapping("/getAll")
    @PreAuthorize("isAuthenticated()")
    public CommonResult getAll(@RequestParam(value = "pageSize", required = false, defaultValue = "10")Integer pageSize,
                               @RequestParam(value = "pageNum", required = false)Integer pageNum,
                               @RequestParam(value = "keyword",required = false) String keyword){
        return ${svr}.getAll(pageSize,pageNum,keyword);
    }

    @ApiOperation("根据id查询$!{table.comment}")
    @GetMapping("/getById")
    @PreAuthorize("isAuthenticated()")
    public CommonResult<${entity}> getById(@RequestParam("id") @NotNull Long id){
        return CommonResult.success(${svr}.getById(id));
    }

    @ApiOperation("增加$!{table.comment}")
    @PostMapping("/add")
    @PreAuthorize("hasAnyAuthority('$!{table.comment}管理')")
    public CommonResult add(@Validated(${entity}.class) ${entity} ${ent}){

        return ${svr}.add(${ent});
    }

    @ApiOperation("更新$!{table.comment}")
    @PostMapping("/update")
    @PreAuthorize("hasAnyAuthority('$!{table.comment}管理')")
    public CommonResult update(@Validated(${entity}.class) ${entity} ${ent}){

        if(${ent}.getId()==null){
            return CommonResult.failed("请输入id");
        }
        return ${svr}.update(${ent});
    }

    @ApiOperation("删除$!{table.comment}")
    @DeleteMapping("/delete")
    @PreAuthorize("hasAnyAuthority('$!{table.comment}管理')")
    public CommonResult delete(@RequestParam("id") @NotNull Long id){

        return ${svr}.delete(id);
    }

    @ApiOperation("批量删除$!{table.comment}")
    @DeleteMapping("/batchDelete")
    @PreAuthorize("hasAnyAuthority('$!{table.comment}管理')")
    public CommonResult batchDelete(@RequestParam("ids") @NotEmpty List<Long> ids){

        return ${svr}.batchDelete(ids);
    }

}

#end